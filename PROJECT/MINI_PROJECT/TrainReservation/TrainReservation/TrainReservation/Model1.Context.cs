//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TrainReservation
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Railway_Reservation_SystemEntities : DbContext
    {
        public Railway_Reservation_SystemEntities()
            : base("name=Railway_Reservation_SystemEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AdminDetail> AdminDetails { get; set; }
        public virtual DbSet<Booked_Ticket> Booked_Ticket { get; set; }
        public virtual DbSet<Train_Details> Train_Details { get; set; }
        public virtual DbSet<User_detail> User_detail { get; set; }
        public virtual DbSet<Avl_Seat> Avl_Seat { get; set; }
        public virtual DbSet<Fare> Fares { get; set; }
    
        public virtual int seatmanage(Nullable<int> seat, Nullable<decimal> trainNo, Nullable<int> @class)
        {
            var seatParameter = seat.HasValue ?
                new ObjectParameter("seat", seat) :
                new ObjectParameter("seat", typeof(int));
    
            var trainNoParameter = trainNo.HasValue ?
                new ObjectParameter("TrainNo", trainNo) :
                new ObjectParameter("TrainNo", typeof(decimal));
    
            var classParameter = @class.HasValue ?
                new ObjectParameter("Class", @class) :
                new ObjectParameter("Class", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("seatmanage", seatParameter, trainNoParameter, classParameter);
        }
    
        public virtual int softdel(Nullable<int> traino)
        {
            var trainoParameter = traino.HasValue ?
                new ObjectParameter("traino", traino) :
                new ObjectParameter("traino", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("softdel", trainoParameter);
        }
    
        public virtual int AddTrain(Nullable<decimal> tno, string tname, string source, string dest, string sts)
        {
            var tnoParameter = tno.HasValue ?
                new ObjectParameter("tno", tno) :
                new ObjectParameter("tno", typeof(decimal));
    
            var tnameParameter = tname != null ?
                new ObjectParameter("tname", tname) :
                new ObjectParameter("tname", typeof(string));
    
            var sourceParameter = source != null ?
                new ObjectParameter("source", source) :
                new ObjectParameter("source", typeof(string));
    
            var destParameter = dest != null ?
                new ObjectParameter("dest", dest) :
                new ObjectParameter("dest", typeof(string));
    
            var stsParameter = sts != null ?
                new ObjectParameter("sts", sts) :
                new ObjectParameter("sts", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddTrain", tnoParameter, tnameParameter, sourceParameter, destParameter, stsParameter);
        }
    
        public virtual int modifytrain(Nullable<decimal> trainno, string source, string dest)
        {
            var trainnoParameter = trainno.HasValue ?
                new ObjectParameter("trainno", trainno) :
                new ObjectParameter("trainno", typeof(decimal));
    
            var sourceParameter = source != null ?
                new ObjectParameter("source", source) :
                new ObjectParameter("source", typeof(string));
    
            var destParameter = dest != null ?
                new ObjectParameter("dest", dest) :
                new ObjectParameter("dest", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("modifytrain", trainnoParameter, sourceParameter, destParameter);
        }
    
        public virtual int addfare(Nullable<int> tno, Nullable<int> fac, Nullable<int> sac, Nullable<int> sl)
        {
            var tnoParameter = tno.HasValue ?
                new ObjectParameter("tno", tno) :
                new ObjectParameter("tno", typeof(int));
    
            var facParameter = fac.HasValue ?
                new ObjectParameter("fac", fac) :
                new ObjectParameter("fac", typeof(int));
    
            var sacParameter = sac.HasValue ?
                new ObjectParameter("Sac", sac) :
                new ObjectParameter("Sac", typeof(int));
    
            var slParameter = sl.HasValue ?
                new ObjectParameter("sl", sl) :
                new ObjectParameter("sl", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("addfare", tnoParameter, facParameter, sacParameter, slParameter);
        }
    
        public virtual int addseat(Nullable<int> tno, Nullable<int> fac, Nullable<int> sac, Nullable<int> sl)
        {
            var tnoParameter = tno.HasValue ?
                new ObjectParameter("tno", tno) :
                new ObjectParameter("tno", typeof(int));
    
            var facParameter = fac.HasValue ?
                new ObjectParameter("fac", fac) :
                new ObjectParameter("fac", typeof(int));
    
            var sacParameter = sac.HasValue ?
                new ObjectParameter("Sac", sac) :
                new ObjectParameter("Sac", typeof(int));
    
            var slParameter = sl.HasValue ?
                new ObjectParameter("sl", sl) :
                new ObjectParameter("sl", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("addseat", tnoParameter, facParameter, sacParameter, slParameter);
        }
    
        public virtual int canTkt(Nullable<int> bookid)
        {
            var bookidParameter = bookid.HasValue ?
                new ObjectParameter("bookid", bookid) :
                new ObjectParameter("bookid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("canTkt", bookidParameter);
        }
    }
}
